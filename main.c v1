#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <pthread.h> // Include the pthread header
#include "common.h"

#define PORT 8080

void handle_connection(int new_socket);

int main() {
    int server_fd, new_socket;
    struct sockaddr_in address;
    int addrlen = sizeof(address);
    
    // Create socket file descriptor
    server_fd = setup_socket();
    if (server_fd < 0) {
        exit(EXIT_FAILURE);
    }

    printf("Server listening on port %d\n", PORT);

    while (1) {
        // Accept an incoming connection
        if ((new_socket = accept(server_fd, (struct sockaddr *)&address, (socklen_t*)&addrlen)) < 0) {
            perror("accept");
            close(server_fd);
            exit(EXIT_FAILURE);
        }

        handle_connection(new_socket);
    }

    return 0;
}

void handle_connection(int new_socket) {
    char buffer[1024] = {0};
    read(new_socket, buffer, 1024);
    int call_type = atoi(buffer);
    printf("the call_type: %d",call_type);

    switch (call_type) {
        case 1: 

            int *arg = malloc(sizeof(int)); // Allocate memory for the socket
            if (arg == NULL) {
                perror("malloc");
                close(new_socket);
                return;
            }
            *arg = new_socket;
            pthread_t thread_id;
            pthread_create(&thread_id, NULL, handle_volte, arg);
            pthread_detach(thread_id); // Detach the thread
            break;
        
        case 2:
            handle_sipp(new_socket);
            break;
        default:
            printf("Invalid call type\n");
    }
}
